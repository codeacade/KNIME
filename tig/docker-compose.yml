

# docker-compose stack for TIG stack
# adjusted version using config outlined in README.mode2.rst
# docker-compose up | tee compose.M2.out
#
#### there are cmds in README.mode2.rst that need tto be run, maybe once, for setup
#### docker net  creation
#### influxdb init
#### chown -R 472 /opt/.../grafana
#### maybe others

## ++ FIXME passwords... 

## TBA  more investigation maybe needed
## currently ports map stpecific host ip, may not be needed anymore
## should have hopefully disabled docker from mocking with iptables 
## ( https://tin6150.github.io/psg/docker.html#behind_ufw )
## had to enable some masquerading, but not done yet, as things seems to be working
## may have to do with the ufw rules that I have?  (cf_bk commit 3499d90 ; psg commit a8a37d7 ) 
## or maybe the port with specific IP?
## But these containers are now protected by UFW rules, internet clients accessing webGUI need to be allowed 
## (infra_ufw.yml for cueball)
#
# basic config from https://hackernoon.com/monitor-your-infrastructure-with-tig-stack-b63971a15ccf
#       aka [ml]    http://www.blog.labouardy.com/monitor-your-infrastructure-with-tig-stack/
# [matisku] = additional config from https://github.com/matisku/tig-stack
# [tr] = https://tig.pt/monitor-your-infrastructure-with-tig-stack/
# [ironicBdger] = https://blog.linuxserver.io/2017/11/25/how-to-monitor-your-server-using-grafana-influxdb-and-telegraf/
#
# [influx] = https://hub.docker.com/_/influxdb/

version: "2"   #"2.3" and "3" avail, but lower maybe more usable in more places.
networks:
    influxdbnet:
       # ie create a mapping, but no special options need be defined
services:
  influxdb:
    container_name: influxdb_M2
    image: influxdb:1.5          # root/root
    #image: influxdb:1.0.2       # maybe need this cuz of admin interface... ++FIXME ??
    #networks:
      #- influxdbnet # [telegraf dockerhub]
    ports:
      - "128.3.10.10:8083:8083" # admin interface # said to be removed in 1.3
      - "128.3.10.10:8086:8086" # HTTP API port
      #- "128.3.10.10:2003:2003" # graphine support, if enabled (def disabled) # https://hub.docker.com/_/influxdb/
    networks:
      - influxdbnet
    environment:
        INFLUX_DATABASE:        "db0"        # README.mode2.rst
        #INLFUX_ADMIN_ENABLED:   "true"       # [influx]
        #INLFUX_ADMIN_USER:      "grafana"
        #INFLUX_ADMIN_PASSWORD:  "grafana"    # ++ FIXME docker yml password solution?  cli env var?
        #INFLUXDB_USER:          "telegraf"   # [influx]
        #INFLUXDB_USER_PASSWORD: "telegraf"   # ++ FIXME  INFLUXDB_USER_PASSWORD=secretpassword
    volumes:
      - /home/tin/tin-gh/inet-dev-class/tig/conf/influxdb.conf:/etc/influxdb/influxdb.conf 
      - /opt/tigM2/influxdb:/var/lib/influxdb  
      # data will be stored persistently in local volume /opt/tig/influxdb 
      # presumably create db, grant user, etc will all be stored in this mapped volume.
      #- /home/core/volumes/influxdb:/var/lib/influxdb
    #restart: always
    restart: unless-stopped # [tr]

  grafana:
    container_name: grafana_M2
    image: grafana/grafana:5.1.5
    #image: grafana/grafana:4.3.2
    ports:
      - "128.3.10.10:3000:3000"
    #links:
      #- influxdb
    #networks:
      #- influxdbnet
      #- influxdb:influxdb # [tr] tweak
    environment: # [matisku ]
        GF_PATHS_LOGS: /var/lib/grafana/log
        ##?GF_SECURITY_ADMIN_USER: admin
        ##?GF_SECURITY_ADMIN_PASSWORD: admin ## ++ FIXME 
        ##GF_SECURITY_ADMIN_PASSWORD: adminadmin  ## changed on webui, thus not setting it again.
        ##?GF_SECURITY_SECRET_KEY: grafana  ## what is this?
        #GF_USERS_ALLOW_SIGN_UP:     "true"
        #GF_USERS_ALLOW_ORG_CREATE:  "true"
        #GF_AUTH_ANONYMOUS_ENABLED:  "true"
        #GF_AUTH_ANONYMOUS_ORG_NAME: "grafana" ##
        #GF_DASHBOARDS_JSON_ENABLED: "true"
        #GF_DASHBOARDS_JSON_PATH: /opt/grafana
    #network_mode: "host"
      # network mode need to be specifed if using persistent mapping
      # or else need to change permission of the folder ++FIXME 
      # https://community.home-assistant.io/t/complete-guide-on-setting-up-grafana-influxdb-with-home-assistant-using-official-docker-images/42860/64
    volumes:
      - /opt/tig/grafana:/var/lib/grafana  ## ++ FIXME need chown -R 472 /opt/tig/grafana
      #- /home/core/conf/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      #- /opt/tig/conf/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      #  data will be stored persistently in local volume /opt/tig/grafana
      #  but that requires fixing permission when docker create the folder, so TBA ++ FIXME
      #  not sure what's the implication of not having persistent storage for grafana... 
      #  map config, json stored in the container only, potentially lost??
      #- /opt/tig/grafana_plugins:/var/lib/grafana/plugins
      # plugins is stored by grafana into /var/lib/grafana/plugins
      # but added a new volume map cuz it complains can't create the dir
      # so letting docker create it ahead of time...
      # admin pw not stored here (probably influxdb)
    #restart: always
    restart: unless-stopped # [tr]

  # eventually will want to fork off telegraf config for collector agent only
  telegraf:
    container_name: telegraf_M2
    image: telegraf:1.5
    #image: telegraf:1.3.3
    #network_mode: "host"  # would eventually have client reporting to central server
    #networks:
      #- influxdbnet
    environment:
        #HOST_NAME:     "telegraf"   # [mutisku]
        #INFLUXDB_HOST: "influxdb"
        #HOST_NAME:     "localhost"  # localhost may NOT work in docker/cni env, but hackernoon post use "host" network mode.
        HOST_NAME:     "bofh.lbl.gov"
        INFLUXDB_HOST: "bofh.lbl.gov"
        INFLUXDB_PORT: "8086"
        DATABASE:      "telegraf"
    volumes:
      - /home/tin/tin-gh/inet-dev-class/tig/conf/telegraf.M2.conf:/etc/telegraf/telegraf.conf:ro
      - /opt/tigM2/telegraf:/var/lib/telegraf
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/utmp:/var/run/utmp:ro # [tr]
      - /sys:/rootfs/sys:ro # [tr]
      - /proc:/rootfs/proc:ro # [tr]
      - /etc:/rootfs/etc:ro # [tr]
    #environment:
      #- HOST_PROC=/rootfs/proc # [tr]
      #- HOST_SYS=/rootfs/sys # [tr]
      #- HOST_ETC=/rootfs/etc # [tr]
    #restart: always
    restart: unless-stopped # [tr]

  netdata:
    container_name: netdata_M2
    image: titpetric/netdata
    ports:
      - "128.3.10.10:19998:19999"
    cap_add: 
       - SYS_PTRACE
    environment:
        FOO: "bar"
    volumes:
      - /home/tin/tin-gh/inet-dev-class/tig/conf/netdata.conf:/etc/netdata/netdata.conf
      - /proc:/host/proc:ro 
      - /sys:/host/sys:ro 
    restart: unless-stopped 

  chronograf:
    container_name: chronograf_M2
    image: chronograf
    networks:
      - influxdbnet
    ports:
      - "128.3.10.10:8888:8888"
    environment:
        FOO: "bar"
    command: chronograf --influxdb-url=http://bofh.lbl.gov:8086
    restart: unless-stopped 

#
#
# retab should convert tab to spaces in vim
# vim modeline directive below (but not sure why, vim always running with "nomodeline" option, even when I am not root! :(
# vim: set modeline nu:
# vim: set expandtab: nosmarttab noautoindent nosmartindent list: nu:
# vim: syntax-=on expandtab nosmarttab noautoindent nosmartindent list nu
